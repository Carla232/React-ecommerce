const brands = ['Brand 1', 'Brand 2', 'Brand 3', 'Brand 4', 'Brand 5', 'Brand 6'];
  const handleSelectBrand = (brand) => {

    if ( selectedBrands.includes(brand)) {
      setSelectedBrands(selectedBrands.filter(b => b !== brand));
    } else {
      setSelectedBrands([...selectedBrands, brand]);
    }
  };


  const [selectedPrice, setSelectedPrice] = useState('');
const [lowPrice, setLowPrice] = useState('');
const [highPrice, setHighPrice] = useState('');
const [selectedBrands, setSelectedBrands] = useState([]);

 {isApplied && (
  <>
    {filteredProducts.length > 0 ? (
      <ul>
        {filteredProducts.map((product) => (
          <li key={product.id}>{product.title} - {product.old_price}</li>
        ))}
      </ul>
    ) : (
      <p>No products found</p>
    )}
  </>
)}

 {!showCategoryFilter && showBrand && (
          <div className="filter-group">
               <BrandFilter
            brands={brands}
            showBrandFilter={showBrandFilter}
            toggleBrandFilter={toggleBrandFilter}
            showMore={showMore}
            toggleShowMore={toggleShowMore}
            handleSelectBrand={handleSelectBrand}
            selectedBrands={selectedBrands}
          /> 

          </div>
    
        )}
          const selectedProducts = products.filter(
    (product) =>
      selectedBrands.length === 0 || selectedBrands.includes(product.brand)
  );
    const handleSelectBrand = (brand) => {
    if ( selectedBrands.includes(brand)) {
      setSelectedBrands(selectedBrands.filter(b => b !== brand));
    } else {
      setSelectedBrands([...selectedBrands, brand]);
    }
  };
   const brands = ['Brand 1', 'Brand 2', 'Brand 3', 'Brand 4', 'Brand 5', 'Brand 6'];
  const [filterApplied, setFilterApplied] = useState(false);